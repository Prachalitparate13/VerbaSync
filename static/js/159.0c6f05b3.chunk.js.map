{"version":3,"file":"static/js/159.0c6f05b3.chunk.js","mappings":"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","sources":["utils/preset.js","utils/whispher.worker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["//for all the language and all the type\r\nexport const MessageTypes = {\r\n    DOWNLOADING: \"DOWNLOADING\",\r\n    LOADING: \"LOADING\",\r\n    RESULT: \"RESULT\",\r\n    RESULT_PARTIAL: \"RESULT_PARTIAL\",\r\n    INFERENCE_REQUEST: \"INFERENCE_REQUEST\",\r\n    INFERENCE_DONE: \"INFERENCE_DONE\",\r\n};\r\n\r\nexport const LoadingStatus = {\r\n    SUCCESS: \"success\",\r\n    ERROR: \"error\",\r\n    LOADING: \"loading\",\r\n};\r\n\r\nexport const ModelNames = {\r\n    WHISPER_TINY_EN: \"openai/whisper-tiny.en\",\r\n    WHISPER_TINY: \"openai/whisper-tiny\",\r\n    WHISPER_BASE: \"openai/whisper-base\",\r\n    WHISPER_BASE_EN: \"openai/whisper-base.en\",\r\n    WHISPER_SMALL: \"openai/whisper-small\",\r\n    WHISPER_SMALL_EN: \"openai/whisper-small.en\",\r\n};\r\n\r\nexport const LANGUAGES = {\r\n    \"Acehnese (Arabic script)\": \"ace_Arab\",\r\n    \"Acehnese (Latin script)\": \"ace_Latn\",\r\n    \"Afrikaans\": \"afr_Latn\",\r\n    \"Akan\": \"aka_Latn\",\r\n    \"Amharic\": \"amh_Ethi\",\r\n    \"Armenian\": \"hye_Armn\",\r\n    \"Assamese\": \"asm_Beng\",\r\n    \"Asturian\": \"ast_Latn\",\r\n    \"Awadhi\": \"awa_Deva\",\r\n    \"Ayacucho Quechua\": \"quy_Latn\",\r\n    \"Balinese\": \"ban_Latn\",\r\n    \"Bambara\": \"bam_Latn\",\r\n    \"Banjar (Arabic script)\": \"bjn_Arab\",\r\n    \"Banjar (Latin script)\": \"bjn_Latn\",\r\n    \"Bashkir\": \"bak_Cyrl\",\r\n    \"Basque\": \"eus_Latn\",\r\n    \"Belarusian\": \"bel_Cyrl\",\r\n    \"Bemba\": \"bem_Latn\",\r\n    \"Bengali\": \"ben_Beng\",\r\n    \"Bhojpuri\": \"bho_Deva\",\r\n    \"Bosnian\": \"bos_Latn\",\r\n    \"Buginese\": \"bug_Latn\",\r\n    \"Bulgarian\": \"bul_Cyrl\",\r\n    \"Burmese\": \"mya_Mymr\",\r\n    \"Catalan\": \"cat_Latn\",\r\n    \"Cebuano\": \"ceb_Latn\",\r\n    \"Central Atlas Tamazight\": \"tzm_Tfng\",\r\n    \"Central Aymara\": \"ayr_Latn\",\r\n    \"Central Kanuri (Arabic script)\": \"knc_Arab\",\r\n    \"Central Kanuri (Latin script)\": \"knc_Latn\",\r\n    \"Central Kurdish\": \"ckb_Arab\",\r\n    \"Chhattisgarhi\": \"hne_Deva\",\r\n    \"Chinese (Simplified)\": \"zho_Hans\",\r\n    \"Chinese (Traditional)\": \"zho_Hant\",\r\n    \"Chokwe\": \"cjk_Latn\",\r\n    \"Crimean Tatar\": \"crh_Latn\",\r\n    \"Croatian\": \"hrv_Latn\",\r\n    \"Czech\": \"ces_Latn\",\r\n    \"Danish\": \"dan_Latn\",\r\n    \"Dari\": \"prs_Arab\",\r\n    \"Dutch\": \"nld_Latn\",\r\n    \"Dyula\": \"dyu_Latn\",\r\n    \"Dzongkha\": \"dzo_Tibt\",\r\n    \"Eastern Panjabi\": \"pan_Guru\",\r\n    \"Eastern Yiddish\": \"ydd_Hebr\",\r\n    \"Egyptian Arabic\": \"arz_Arab\",\r\n    \"English\": \"eng_Latn\",\r\n    \"Esperanto\": \"epo_Latn\",\r\n    \"Estonian\": \"est_Latn\",\r\n    \"Ewe\": \"ewe_Latn\",\r\n    \"Faroese\": \"fao_Latn\",\r\n    \"Fijian\": \"fij_Latn\",\r\n    \"Finnish\": \"fin_Latn\",\r\n    \"Fon\": \"fon_Latn\",\r\n    \"French\": \"fra_Latn\",\r\n    \"Friulian\": \"fur_Latn\",\r\n    \"Galician\": \"glg_Latn\",\r\n    \"Ganda\": \"lug_Latn\",\r\n    \"Georgian\": \"kat_Geor\",\r\n    \"German\": \"deu_Latn\",\r\n    \"Greek\": \"ell_Grek\",\r\n    \"Guarani\": \"grn_Latn\",\r\n    \"Gujarati\": \"guj_Gujr\",\r\n    \"Haitian Creole\": \"hat_Latn\",\r\n    \"Halh Mongolian\": \"khk_Cyrl\",\r\n    \"Hausa\": \"hau_Latn\",\r\n    \"Hebrew\": \"heb_Hebr\",\r\n    \"Hindi\": \"hin_Deva\",\r\n    \"Hungarian\": \"hun_Latn\",\r\n    \"Icelandic\": \"isl_Latn\",\r\n    \"Igbo\": \"ibo_Latn\",\r\n    \"Ilocano\": \"ilo_Latn\",\r\n    \"Indonesian\": \"ind_Latn\",\r\n    \"Irish\": \"gle_Latn\",\r\n    \"Italian\": \"ita_Latn\",\r\n    \"Japanese\": \"jpn_Jpan\",\r\n    \"Javanese\": \"jav_Latn\",\r\n    \"Jingpho\": \"kac_Latn\",\r\n    \"Kabiy√®\": \"kbp_Latn\",\r\n    \"Kabuverdianu\": \"kea_Latn\",\r\n    \"Kabyle\": \"kab_Latn\",\r\n    \"Kamba\": \"kam_Latn\",\r\n    \"Kannada\": \"kan_Knda\",\r\n    \"Kashmiri (Arabic script)\": \"kas_Arab\",\r\n    \"Kashmiri (Devanagari script)\": \"kas_Deva\",\r\n    \"Kazakh\": \"kaz_Cyrl\",\r\n    \"Khmer\": \"khm_Khmr\",\r\n    \"Kikongo\": \"kon_Latn\",\r\n    \"Kikuyu\": \"kik_Latn\",\r\n    \"Kimbundu\": \"kmb_Latn\",\r\n    \"Kinyarwanda\": \"kin_Latn\",\r\n    \"Korean\": \"kor_Hang\",\r\n    \"Kyrgyz\": \"kir_Cyrl\",\r\n    \"Lao\": \"lao_Laoo\",\r\n    \"Latgalian\": \"ltg_Latn\",\r\n    \"Ligurian\": \"lij_Latn\",\r\n    \"Limburgish\": \"lim_Latn\",\r\n    \"Lingala\": \"lin_Latn\",\r\n    \"Lithuanian\": \"lit_Latn\",\r\n    \"Lombard\": \"lmo_Latn\",\r\n    \"Luba-Kasai\": \"lua_Latn\",\r\n    \"Luo\": \"luo_Latn\",\r\n    \"Luxembourgish\": \"ltz_Latn\",\r\n    \"Macedonian\": \"mkd_Cyrl\",\r\n    \"Magahi\": \"mag_Deva\",\r\n    \"Maithili\": \"mai_Deva\",\r\n    \"Malayalam\": \"mal_Mlym\",\r\n    \"Maltese\": \"mlt_Latn\",\r\n    \"Maori\": \"mri_Latn\",\r\n    \"Marathi\": \"mar_Deva\",\r\n    \"Meitei (Bengali script)\": \"mni_Beng\",\r\n    \"Mesopotamian Arabic\": \"acm_Arab\",\r\n    \"Minangkabau (Arabic script)\": \"min_Arab\",\r\n    \"Minangkabau (Latin script)\": \"min_Latn\",\r\n    \"Mizo\": \"lus_Latn\",\r\n    \"Modern Standard Arabic (Romanized)\": \"arb_Latn\",\r\n    \"Modern Standard Arabic\": \"arb_Arab\",\r\n    \"Moroccan Arabic\": \"ary_Arab\",\r\n    \"Mossi\": \"mos_Latn\",\r\n    \"Najdi Arabic\": \"ars_Arab\",\r\n    \"Nepali\": \"npi_Deva\",\r\n    \"Nigerian Fulfulde\": \"fuv_Latn\",\r\n    \"North Azerbaijani\": \"azj_Latn\",\r\n    \"North Levantine Arabic\": \"apc_Arab\",\r\n    \"Northern Kurdish\": \"kmr_Latn\",\r\n    \"Northern Sotho\": \"nso_Latn\",\r\n    \"Northern Uzbek\": \"uzn_Latn\",\r\n    \"Norwegian Bokm√•l\": \"nob_Latn\",\r\n    \"Norwegian Nynorsk\": \"nno_Latn\",\r\n    \"Nuer\": \"nus_Latn\",\r\n    \"Nyanja\": \"nya_Latn\",\r\n    \"Occitan\": \"oci_Latn\",\r\n    \"Odia\": \"ory_Orya\",\r\n    \"Pangasinan\": \"pag_Latn\",\r\n    \"Papiamento\": \"pap_Latn\",\r\n    \"Plateau Malagasy\": \"plt_Latn\",\r\n    \"Polish\": \"pol_Latn\",\r\n    \"Portuguese\": \"por_Latn\",\r\n    \"Romanian\": \"ron_Latn\",\r\n    \"Rundi\": \"run_Latn\",\r\n    \"Russian\": \"rus_Cyrl\",\r\n    \"Samoan\": \"smo_Latn\",\r\n    \"Sango\": \"sag_Latn\",\r\n    \"Sanskrit\": \"san_Deva\",\r\n    \"Santali\": \"sat_Olck\",\r\n    \"Sardinian\": \"srd_Latn\",\r\n    \"Scottish Gaelic\": \"gla_Latn\",\r\n    \"Serbian\": \"srp_Cyrl\",\r\n    \"Shan\": \"shn_Mymr\",\r\n    \"Shona\": \"sna_Latn\",\r\n    \"Sicilian\": \"scn_Latn\",\r\n    \"Silesian\": \"szl_Latn\",\r\n    \"Sindhi\": \"snd_Arab\",\r\n    \"Sinhala\": \"sin_Sinh\",\r\n    \"Slovak\": \"slk_Latn\",\r\n    \"Slovenian\": \"slv_Latn\",\r\n    \"Somali\": \"som_Latn\",\r\n    \"South Azerbaijani\": \"azb_Arab\",\r\n    \"South Levantine Arabic\": \"ajp_Arab\",\r\n    \"Southern Pashto\": \"pbt_Arab\",\r\n    \"Southern Sotho\": \"sot_Latn\",\r\n    \"Southwestern Dinka\": \"dik_Latn\",\r\n    \"Spanish\": \"spa_Latn\",\r\n    \"Standard Latvian\": \"lvs_Latn\",\r\n    \"Standard Malay\": \"zsm_Latn\",\r\n    \"Standard Tibetan\": \"bod_Tibt\",\r\n    \"Sundanese\": \"sun_Latn\",\r\n    \"Swahili\": \"swh_Latn\",\r\n    \"Swati\": \"ssw_Latn\",\r\n    \"Swedish\": \"swe_Latn\",\r\n    \"Tagalog\": \"tgl_Latn\",\r\n    \"Tajik\": \"tgk_Cyrl\",\r\n    \"Tamasheq (Latin script)\": \"taq_Latn\",\r\n    \"Tamasheq (Tifinagh script)\": \"taq_Tfng\",\r\n    \"Tamil\": \"tam_Taml\",\r\n    \"Tatar\": \"tat_Cyrl\",\r\n    \"Ta‚Äôizzi-Adeni Arabic\": \"acq_Arab\",\r\n    \"Telugu\": \"tel_Telu\",\r\n    \"Thai\": \"tha_Thai\",\r\n    \"Tigrinya\": \"tir_Ethi\",\r\n    \"Tok Pisin\": \"tpi_Latn\",\r\n    \"Tosk Albanian\": \"als_Latn\",\r\n    \"Tsonga\": \"tso_Latn\",\r\n    \"Tswana\": \"tsn_Latn\",\r\n    \"Tumbuka\": \"tum_Latn\",\r\n    \"Tunisian Arabic\": \"aeb_Arab\",\r\n    \"Turkish\": \"tur_Latn\",\r\n    \"Turkmen\": \"tuk_Latn\",\r\n    \"Twi\": \"twi_Latn\",\r\n    \"Ukrainian\": \"ukr_Cyrl\",\r\n    \"Umbundu\": \"umb_Latn\",\r\n    \"Urdu\": \"urd_Arab\",\r\n    \"Uyghur\": \"uig_Arab\",\r\n    \"Venetian\": \"vec_Latn\",\r\n    \"Vietnamese\": \"vie_Latn\",\r\n    \"Waray\": \"war_Latn\",\r\n    \"Welsh\": \"cym_Latn\",\r\n    \"West Central Oromo\": \"gaz_Latn\",\r\n    \"Western Persian\": \"pes_Arab\",\r\n    \"Wolof\": \"wol_Latn\",\r\n    \"Xhosa\": \"xho_Latn\",\r\n    \"Yoruba\": \"yor_Latn\",\r\n    \"Yue Chinese\": \"yue_Hant\",\r\n    \"Zulu\": \"zul_Latn\",\r\n  }","// npm i @xenova/transformes\r\n// /* eslint-disable-next-line no-restricted-globals */ this Disallow specified global variables\r\n// Disallowing usage of specific global variables can be useful if you want to allow a set of global variables by enabling an environment, but still want to disallow some of those.\r\n\r\n// in this file we have setuip our pipeline using all the reqired functions and classes for our model\r\nimport { pipeline, env } from \"@xenova/transformers\";\r\nimport { MessageTypes } from \"./preset\";\r\n\r\n//  CRA was deprecated while we use create-rect-app so we get html from tokenizer so we use below settings\r\nenv.allowLocalModels = false;\r\nenv.useBrowserCache = false;\r\n\r\nclass MyTranscriptionPipeline {\r\n  static task = \"automatic-speech-recognition\";\r\n  static model = \"openai/whisper-tiny.en\";\r\n  static instance = null;\r\n\r\n  static async getInstance(progress_callback = null) {\r\n    if (this.instance === null) {\r\n      this.instance = await pipeline(this.task, null, { progress_callback });\r\n    }\r\n\r\n    return this.instance;\r\n  }\r\n}\r\n/* eslint-disable-next-line no-restricted-globals */\r\nself.addEventListener(\"message\", async (event) => {\r\n  const { type, audio } = event.data;\r\n  if (type === MessageTypes.INFERENCE_REQUEST) {\r\n    await transcribe(audio);\r\n  }\r\n});\r\n\r\nasync function transcribe(audio) {\r\n  sendLoadingMessage(\"loading\");\r\n\r\n  let pipeline;\r\n\r\n  try {\r\n    pipeline = await MyTranscriptionPipeline.getInstance(load_model_callback);\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n\r\n  sendLoadingMessage(\"success\");\r\n\r\n  const stride_length_s = 5;\r\n\r\n  const generationTracker = new GenerationTracker(pipeline, stride_length_s);\r\n  await pipeline(audio, {\r\n    top_k: 0,\r\n    do_sample: false,\r\n    chunk_length: 30,\r\n    stride_length_s,\r\n    return_timestamps: true,\r\n    callback_function:\r\n      generationTracker.callbackFunction.bind(generationTracker),\r\n    chunk_callback: generationTracker.chunkCallback.bind(generationTracker),\r\n  });\r\n  generationTracker.sendFinalResult();\r\n}\r\n\r\nasync function load_model_callback(data) {\r\n  const { status } = data;\r\n  if (status === \"progress\") {\r\n    const { file, progress, loaded, total } = data;\r\n    sendDownloadingMessage(file, progress, loaded, total);\r\n  }\r\n}\r\n\r\nfunction sendLoadingMessage(status) {\r\n  /* eslint-disable-next-line no-restricted-globals */\r\n  self.postMessage({\r\n    type: MessageTypes.LOADING,\r\n    status,\r\n  });\r\n}\r\n\r\nasync function sendDownloadingMessage(file, progress, loaded, total) {\r\n  /* eslint-disable-next-line no-restricted-globals */\r\n  self.postMessage({\r\n    type: MessageTypes.DOWNLOADING,\r\n    file,\r\n    progress,\r\n    loaded,\r\n    total,\r\n  });\r\n}\r\n\r\nclass GenerationTracker {\r\n  constructor(pipeline, stride_length_s) {\r\n    this.pipeline = pipeline;\r\n    this.stride_length_s = stride_length_s;\r\n    this.chunks = [];\r\n    this.time_precision =\r\n      pipeline?.processor.feature_extractor.config.chunk_length /\r\n      pipeline.model.config.max_source_positions;\r\n    this.processed_chunks = [];\r\n    this.callbackFunctionCounter = 0;\r\n  }\r\n\r\n  sendFinalResult() {\r\n    /* eslint-disable-next-line no-restricted-globals */\r\n    self.postMessage({ type: MessageTypes.INFERENCE_DONE });\r\n  }\r\n\r\n  callbackFunction(beams) {\r\n    this.callbackFunctionCounter += 1;\r\n    if (this.callbackFunctionCounter % 10 !== 0) {\r\n      return;\r\n    }\r\n\r\n    const bestBeam = beams[0];\r\n    let text = this.pipeline.tokenizer.decode(bestBeam.output_token_ids, {\r\n      skip_special_tokens: true,\r\n    });\r\n\r\n    const result = {\r\n      text,\r\n      start: this.getLastChunkTimestamp(),\r\n      end: undefined,\r\n    };\r\n\r\n    createPartialResultMessage(result);\r\n  }\r\n\r\n  chunkCallback(data) {\r\n    this.chunks.push(data);\r\n    const [text, { chunks }] = this.pipeline.tokenizer._decode_asr(\r\n      this.chunks,\r\n      {\r\n        time_precision: this.time_precision,\r\n        return_timestamps: true,\r\n        force_full_sequence: false,\r\n      }\r\n    );\r\n\r\n    this.processed_chunks = chunks.map((chunk, index) => {\r\n      return this.processChunk(chunk, index);\r\n    });\r\n\r\n    createResultMessage(\r\n      this.processed_chunks,\r\n      false,\r\n      this.getLastChunkTimestamp()\r\n    );\r\n  }\r\n\r\n  getLastChunkTimestamp() {\r\n    if (this.processed_chunks.length === 0) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  processChunk(chunk, index) {\r\n    const { text, timestamp } = chunk;\r\n    const [start, end] = timestamp;\r\n\r\n    return {\r\n      index,\r\n      text: `${text.trim()}`,\r\n      start: Math.round(start),\r\n      end: Math.round(end) || Math.round(start + 0.9 * this.stride_length_s),\r\n    };\r\n  }\r\n}\r\n\r\nfunction createResultMessage(results, isDone, completedUntilTimestamp) {\r\n  /* eslint-disable-next-line no-restricted-globals */\r\n  self.postMessage({\r\n    type: MessageTypes.RESULT,\r\n    results,\r\n    isDone,\r\n    completedUntilTimestamp,\r\n  });\r\n}\r\n\r\nfunction createPartialResultMessage(result) {\r\n  /* eslint-disable-next-line no-restricted-globals */\r\n  self.postMessage({\r\n    type: MessageTypes.RESULT_PARTIAL,\r\n    result,\r\n  });\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [138], () => (__webpack_require__(59)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"064bdea6\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t159: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkverbasync\"] = self[\"webpackChunkverbasync\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(138).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["MessageTypes","DOWNLOADING","LOADING","RESULT","RESULT_PARTIAL","INFERENCE_REQUEST","INFERENCE_DONE","env","allowLocalModels","useBrowserCache","MyTranscriptionPipeline","getInstance","progress_callback","arguments","length","undefined","this","instance","pipeline","task","async","load_model_callback","data","status","file","progress","loaded","total","self","postMessage","type","sendDownloadingMessage","sendLoadingMessage","model","addEventListener","audio","event","err","console","log","message","stride_length_s","generationTracker","GenerationTracker","top_k","do_sample","chunk_length","return_timestamps","callback_function","callbackFunction","bind","chunk_callback","chunkCallback","sendFinalResult","transcribe","constructor","chunks","time_precision","processor","feature_extractor","config","max_source_positions","processed_chunks","callbackFunctionCounter","beams","bestBeam","result","createPartialResultMessage","text","tokenizer","decode","output_token_ids","skip_special_tokens","start","getLastChunkTimestamp","end","push","_decode_asr","force_full_sequence","results","isDone","completedUntilTimestamp","map","chunk","index","processChunk","timestamp","trim","Math","round","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","leafPrototypes","getProto","getPrototypeOf","obj","t","value","mode","__esModule","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","d","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","reduce","promises","u","miniCssF","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime","pop","next"],"sourceRoot":""}